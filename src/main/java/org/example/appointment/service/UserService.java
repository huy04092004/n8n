package org.example.appointment.service;

import org.example.appointment.mapper.UserMapper;
import org.example.appointment.model.User;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
public class UserService {
    private final UserMapper userMapper;

    public UserService(UserMapper userMapper) {
        this.userMapper = userMapper;
    }

    public boolean registerUser(User user) {
        if (userMapper.findByEmail(user.getEmail()).isPresent()) {
            return false; // Email ƒë√£ t·ªìn t·∫°i
        }
        user.setPassword(hashPassword(user.getPassword())); // M√£ h√≥a m·∫≠t kh·∫©u tr∆∞·ªõc khi l∆∞u
        userMapper.insertUser(user);
        return true;
    }

    public Optional<User> loginUser(String email, String password) {
        Optional<User> user = userMapper.findByEmail(email);
        if (user.isPresent()) {
            System.out.println("üîç T√¨m th·∫•y user: " + user.get().getEmail());
            if (checkPassword(password, user.get().getPassword())) {
                return user;
            } else {
                System.out.println("‚ùå M·∫≠t kh·∫©u sai!");
            }
        } else {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y user!");
        }
        return Optional.empty();
    }


    private String hashPassword(String password) {
        return password; // TODO: Thay th·∫ø b·∫±ng BCrypt ƒë·ªÉ m√£ h√≥a m·∫≠t kh·∫©u
    }

    private boolean checkPassword(String rawPassword, String hashedPassword) {
        return rawPassword.equals(hashedPassword); // TODO: S·ª≠ d·ª•ng BCrypt ƒë·ªÉ ki·ªÉm tra m·∫≠t kh·∫©u
    }
}
